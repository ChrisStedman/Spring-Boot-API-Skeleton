openapi: 3.0.3
info:
  title: Demo API
  version: '1.0'
  description: Demo Spec
paths:
  /examples:
    get:
      summary: Get all examples
      operationId: get-examples
      tags:
        - Example
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Example'
    post:
      summary: Create example
      operationId: create-example
      tags:
        - Example
      requestBody:
        description: Create a new example
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Example'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Example'
  /examples/{exampleId}:
    parameters:
      - $ref: '#/components/parameters/ExampleId'
    get:
      summary: Get example
      operationId: get-example
      tags:
        - Example
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Example'
        '404':
          $ref: '#/components/responses/404'
  /examples/{exampleId}/data:
    parameters:
      - $ref: '#/components/parameters/ExampleId'
    post:
      summary: Create data
      operationId: create-data
      tags:
        - Data
      requestBody:
        description: Create new data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Data'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Data'
  /examples/{exampleId}/data/{dataId}:
    parameters:
      - $ref: '#/components/parameters/ExampleId'
      - $ref: '#/components/parameters/DataId'
    get:
      summary: Get data
      operationId: get-data
      tags:
        - Data
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Data'
components:
  parameters:
    ExampleId:
      name: exampleId
      in: path
      description: ID of the example to be retrieved
      required: true
      schema:
        type: integer
        format: int64
    DataId:
      name: dataId
      in: path
      description: ID of the data to be retrieved
      required: true
      schema:
        type: integer
        format: int64
  schemas:
    Data:
      type: object
      properties:
        id:
          type: integer
          format: int64
          readOnly: true
          example: 1
        created:
          type: string
          format: date-time
          example: "2023-04-26T12:30:50Z"
        content:
          type: string
          maxLength: 144
      required:
        - id
        - created
        - content
    Example:
      type: object
      properties:
        id:
          type: integer
          format: int64
          readOnly: true
          example: 1
        name:
          type: string
          example: Example
        data:
          type: array
          readOnly: true
          minItems: 0
          items:
            type: string
            format: int64
            example: 1
      required:
        - id
        - name
        - data
    Error:
      type: object
      properties:
        code:
          type: string
          example: ERROR.1234
        message:
          type: string
          example: This is an error message
  responses:
    '404':
      description: Not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'